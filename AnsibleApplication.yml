---
- name: Deploy  containers
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Create Docker network
      docker_network:
        name: microservice
        state: present
        
    - name: Start Zookeeper container
      docker_container:
        name: zookeeper
        image: docker.io/bitnami/zookeeper:3.9
        state: started
        detach: yes
        published_ports:
          - "2181:2181"
        env:
          ALLOW_ANONYMOUS_LOGIN: "yes"
        networks:
          - name: microservice

    - name: Start Kafka container
      docker_container:
        name: kafka
        image: docker.io/bitnami/kafka:3.4
        state: started
        detach: yes
        published_ports:
          - "9092:9092"
        env:
          KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181"
        networks:
          - name: microservice
    
      
    - name: Execute kafka-topics.sh command
      command: docker exec kafka /opt/bitnami/kafka/bin/kafka-topics.sh --create --topic routersData --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1
      ignore_errors: true
      
    - name: Start MySQL container
      docker_container:
        name: mysql
        image: docker.io/paraspatil/data-ingestion-mysql
        state: started
        detach: yes
        env:
          MYSQL_USER: "user"
          MYSQL_PASSWORD: "user"
          MYSQL_ROOT_PASSWORD: "root"
        networks:
          - name: microservice
          
    - name: Start data-ingestion container
      docker_container:
        name: data-ingestion
        image: docker.io/paraspatil/data-ingestion
        state: started
        detach: yes
        published_ports:
          - "8080:8080"
        env:
          MYSQL_HOST: "mysql"
          KAFKA_SERVER: "kafka"
        networks:
          - name: microservice
          
    - name: Start data-visualization container
      docker_container:
        name: data-visualization
        image: docker.io/paraspatil/data-visualization
        state: started
        detach: yes
        published_ports:
          - "8081:8081"
        env:
          DATA_INGESTION: "data-ingestion"
        networks:
          - name: microservice

